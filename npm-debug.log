0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'ios-deploy' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose cache add [ 'ios-deploy', null ]
5 verbose cache add name=undefined spec="ios-deploy" args=["ios-deploy",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'ios-deploy',
6 verbose parsed url   path: 'ios-deploy',
6 verbose parsed url   href: 'ios-deploy' }
7 silly lockFile 69149c11-ios-deploy ios-deploy
8 verbose lock ios-deploy /Users/danielpetkevich/.npm/69149c11-ios-deploy.lock
9 silly lockFile 69149c11-ios-deploy ios-deploy
10 silly lockFile 69149c11-ios-deploy ios-deploy
11 verbose addNamed [ 'ios-deploy', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 9c508a6b-ios-deploy ios-deploy@
14 verbose lock ios-deploy@ /Users/danielpetkevich/.npm/9c508a6b-ios-deploy.lock
15 silly addNameRange { name: 'ios-deploy', range: '*', hasData: false }
16 verbose url raw ios-deploy
17 verbose url resolving [ 'https://registry.npmjs.org/', './ios-deploy' ]
18 verbose url resolved https://registry.npmjs.org/ios-deploy
19 info trying registry request attempt 1 at 22:38:11
20 verbose etag "ENV9JD3Y3NT1LU8NAPE7FTFYZ"
21 http GET https://registry.npmjs.org/ios-deploy
22 http 304 https://registry.npmjs.org/ios-deploy
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Tue, 15 Jul 2014 05:38:12 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Tue, 15 Jul 2014 05:38:12 GMT',
23 silly registry.get     'cache-control': 'max-age=30',
23 silly registry.get     etag: '"ENV9JD3Y3NT1LU8NAPE7FTFYZ"',
23 silly registry.get     'x-served-by': 'cache-sv60-SJC3',
23 silly registry.get     'x-cache': 'HIT',
23 silly registry.get     'x-cache-hits': '1',
23 silly registry.get     'x-timer': 'S1405402692.150369,VS0,VE0',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 verbose etag ios-deploy from cache
25 silly addNameRange number 2 { name: 'ios-deploy', range: '*', hasData: true }
26 silly addNameRange versions [ 'ios-deploy',
26 silly addNameRange   [ '1.0.1',
26 silly addNameRange     '1.0.2',
26 silly addNameRange     '1.0.3',
26 silly addNameRange     '1.0.4',
26 silly addNameRange     '1.0.5',
26 silly addNameRange     '1.0.6',
26 silly addNameRange     '1.0.7',
26 silly addNameRange     '1.0.8' ] ]
27 verbose addNamed [ 'ios-deploy', '1.0.8' ]
28 verbose addNamed [ '1.0.8', '1.0.8' ]
29 silly lockFile 211a3cb3-ios-deploy-1-0-8 ios-deploy@1.0.8
30 verbose lock ios-deploy@1.0.8 /Users/danielpetkevich/.npm/211a3cb3-ios-deploy-1-0-8.lock
31 silly lockFile 211a3cb3-ios-deploy-1-0-8 ios-deploy@1.0.8
32 silly lockFile 211a3cb3-ios-deploy-1-0-8 ios-deploy@1.0.8
33 silly lockFile 9c508a6b-ios-deploy ios-deploy@
34 silly lockFile 9c508a6b-ios-deploy ios-deploy@
35 silly resolved [ { name: 'ios-deploy',
35 silly resolved     version: '1.0.8',
35 silly resolved     description: 'launch iOS apps iOS devices from the command line (Xcode 5)',
35 silly resolved     main: 'ios-deploy',
35 silly resolved     scripts: { preinstall: 'make ios-deploy' },
35 silly resolved     bin: { 'ios-deploy': './ios-deploy' },
35 silly resolved     repository: { type: 'git', url: 'https://github.com/phonegap/ios-deploy' },
35 silly resolved     keywords: [ 'ios-deploy', 'deploy to iOS device' ],
35 silly resolved     author: { name: 'Greg Hughes' },
35 silly resolved     license: 'GPLv3',
35 silly resolved     readme: 'ios-deploy\n==========\nInstall and debug iPhone apps without using Xcode. Designed to work on unjailbroken devices.\n\n## Requirements\n\n* Mac OS X. Tested on Snow Leopard only.\n* You need to have a valid iPhone development certificate installed.\n* Xcode must be installed, along with the SDK for your iOS version.\n\n## Usage\n\n    ./ios-deploy [OPTION]...\n      -d, --debug                  launch the app in GDB after installation\n      -i, --id <device_id>         the id of the device to connect to\n      -c, --detect                 only detect if the device is connected\n      -b, --bundle <bundle.app>    the path to the app bundle to be installed\n      -a, --args <args>            command line arguments to pass to the app when launching it\n      -t, --timeout <timeout>      number of seconds to wait for a device to be connected\n      -u, --unbuffered             don\'t buffer stdout\n      -g, --gdbargs <args>         extra arguments to pass to GDB when starting the debugger\n      -x, --gdbexec <file>         GDB commands script file\n      -n, --nostart                do not start the app when debugging\n      -I, --noninteractive         start in non interactive mode (quit when app crashes or exits)\n      -v, --verbose                enable verbose output\n      -m, --noinstall              directly start debugging without app install (-d not required) \n      -p, --port <number>          port used for device, default: 12345\n      -r, --uninstall              uninstall the app before install (do not use with -m; app cache and data are cleared)       \n      -V, --version                print the executable version\n\n## Demo\n\n* The included demo.app represents the minimum required to get code running on iOS.\n* `make install` will install demo.app to the device.\n* `make debug` will install demo.app and launch a GDB session.\n\n## Notes\n\n* With some modifications, it may be possible to use this without Xcode installed; however, you would need a copy of the relevant DeveloperDiskImage.dmg (included with Xcode). GDB would also run slower as symbols would be downloaded from the device on-the-fly.\n\n\n## Listing Device Ids\n\nDevice Ids are the UDIDs of the iOS devices. From the command line, you can list device ids [this way](http://javierhz.blogspot.com/2012/06/how-to-get-udid-of-iphone-using-shell.html):\n\n        system_profiler SPUSBDataType | sed -n -e \'/iPad/,/Serial/p\' -e \'/iPhone/,/Serial/p\' | grep "Serial Number:" | awk -F ": " \'{print $2}\'\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     bugs: { url: 'https://github.com/phonegap/ios-deploy/issues' },
35 silly resolved     homepage: 'https://github.com/phonegap/ios-deploy',
35 silly resolved     _id: 'ios-deploy@1.0.8',
35 silly resolved     _shasum: '31ce07ec3a39f2f009b16d85f4c5331d5131c54f',
35 silly resolved     _from: 'ios-deploy@',
35 silly resolved     _resolved: 'https://registry.npmjs.org/ios-deploy/-/ios-deploy-1.0.8.tgz' } ]
36 info install ios-deploy@1.0.8 into /usr/local/lib
37 info installOne ios-deploy@1.0.8
38 info /usr/local/lib/node_modules/ios-deploy unbuild
39 verbose tar unpack /Users/danielpetkevich/.npm/ios-deploy/1.0.8/package.tgz
40 silly lockFile d4189100-ocal-lib-node-modules-ios-deploy tar:///usr/local/lib/node_modules/ios-deploy
41 verbose lock tar:///usr/local/lib/node_modules/ios-deploy /Users/danielpetkevich/.npm/d4189100-ocal-lib-node-modules-ios-deploy.lock
42 silly lockFile fcfdd0d1-npm-ios-deploy-1-0-8-package-tgz tar:///Users/danielpetkevich/.npm/ios-deploy/1.0.8/package.tgz
43 verbose lock tar:///Users/danielpetkevich/.npm/ios-deploy/1.0.8/package.tgz /Users/danielpetkevich/.npm/fcfdd0d1-npm-ios-deploy-1-0-8-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 silly gunzTarPerm extractEntry package.json
46 silly gunzTarPerm extractEntry .npmignore
47 silly gunzTarPerm extractEntry README.md
48 silly gunzTarPerm extractEntry LICENSE
49 silly gunzTarPerm extractEntry Entitlements.plist
50 silly gunzTarPerm extractEntry Info.plist
51 silly gunzTarPerm extractEntry Makefile
52 silly gunzTarPerm extractEntry CONTRIBUTING.md
53 silly gunzTarPerm extractEntry ResourceRules.plist
54 silly gunzTarPerm extractEntry demo.c
55 silly gunzTarPerm extractEntry ios-deploy.c
56 silly gunzTarPerm extractEntry MobileDevice.h
57 silly lockFile d4189100-ocal-lib-node-modules-ios-deploy tar:///usr/local/lib/node_modules/ios-deploy
58 silly lockFile d4189100-ocal-lib-node-modules-ios-deploy tar:///usr/local/lib/node_modules/ios-deploy
59 silly lockFile fcfdd0d1-npm-ios-deploy-1-0-8-package-tgz tar:///Users/danielpetkevich/.npm/ios-deploy/1.0.8/package.tgz
60 silly lockFile fcfdd0d1-npm-ios-deploy-1-0-8-package-tgz tar:///Users/danielpetkevich/.npm/ios-deploy/1.0.8/package.tgz
61 info preinstall ios-deploy@1.0.8
62 verbose unsafe-perm in lifecycle false
63 verbose readDependencies using package.json deps
64 verbose readDependencies using package.json deps
65 silly resolved []
66 verbose about to build /usr/local/lib/node_modules/ios-deploy
67 info build /usr/local/lib/node_modules/ios-deploy
68 verbose linkStuff [ true,
68 verbose linkStuff   '/usr/local/lib/node_modules',
68 verbose linkStuff   true,
68 verbose linkStuff   '/usr/local/lib/node_modules' ]
69 info linkStuff ios-deploy@1.0.8
70 verbose linkBins ios-deploy@1.0.8
71 verbose link bins [ { 'ios-deploy': './ios-deploy' }, '/usr/local/bin', true ]
72 verbose linkMans ios-deploy@1.0.8
73 verbose rebuildBundles ios-deploy@1.0.8
74 info install ios-deploy@1.0.8
75 info postinstall ios-deploy@1.0.8
76 warn unmet dependency /usr/local/lib/node_modules/jitsu/node_modules/request/node_modules/form-data requires mime@'1.2.2' but will load
76 warn unmet dependency /usr/local/lib/node_modules/jitsu/node_modules/request/node_modules/mime,
76 warn unmet dependency which is version 1.2.7
77 error peerinvalid The package flatiron does not satisfy its siblings' peerDependencies requirements!
77 error peerinvalid Peer flatiron-cli-config@0.1.3 wants flatiron@~0.1.9
77 error peerinvalid Peer flatiron-cli-users@0.1.1 wants flatiron@~0.1.9
78 error System Darwin 13.1.0
79 error command "node" "/usr/local/bin/npm" "install" "-g" "ios-deploy"
80 error cwd /Users/danielpetkevich/Desktop/noknok
81 error node -v v0.10.28
82 error npm -v 1.4.9
83 error code EPEERINVALID
84 verbose exit [ 1, true ]
